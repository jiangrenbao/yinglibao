<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bjpowernode.dataservice.mapper.FinanceAccountMapper">
  <resultMap id="BaseResultMap" type="com.bjpowernode.model.FinanceAccount">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="u_id" jdbcType="INTEGER" property="uId" />
    <result column="available_money" jdbcType="DECIMAL" property="availableMoney" />
  </resultMap>
  <sql id="Base_Column_List">
    id, u_id, available_money
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from finance_account
    where id = #{id,jdbcType=INTEGER}
  </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from finance_account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bjpowernode.model.FinanceAccount">
    insert into finance_account (id, u_id, available_money
      )
    values (#{id,jdbcType=INTEGER}, #{uId,jdbcType=INTEGER}, #{availableMoney,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bjpowernode.model.FinanceAccount">
    insert into finance_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uId != null">
        u_id,
      </if>
      <if test="availableMoney != null">
        available_money,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uId != null">
        #{uId,jdbcType=INTEGER},
      </if>
      <if test="availableMoney != null">
        #{availableMoney,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bjpowernode.model.FinanceAccount">
    update finance_account
    <set>
      <if test="uId != null">
        u_id = #{uId,jdbcType=INTEGER},
      </if>
      <if test="availableMoney != null">
        available_money = #{availableMoney,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.bjpowernode.model.FinanceAccount">
    update finance_account
    set u_id = #{uId,jdbcType=INTEGER},
      available_money = #{availableMoney,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateMoneyInvestByUid">
      update finance_account f set available_money = #{avaible_money} - #{money}
      where u_id = #{id}
    </update>
  <update id="IncomeBack">
    update  finance_account set available_money = available_money + #{incomeMoney} + #{investMoney}
    where u_id = #{getuId}
  </update>

  <select id="queryAccountByUserId" resultType="java.math.BigDecimal">
    select available_money account from finance_account where u_id = #{id}
  </select>
  <select id="queryAccountByUid" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
        from finance_account f
        where f.u_id = #{id}
        for update
  </select>


</mapper>