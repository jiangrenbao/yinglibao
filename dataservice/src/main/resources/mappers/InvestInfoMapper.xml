<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bjpowernode.dataservice.mapper.InvestInfoMapper">
  <!--<editor-fold desc="逆向工程生成">-->
  <resultMap id="BaseResultMap" type="com.bjpowernode.model.InvestInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="invest_money" jdbcType="DECIMAL" property="investMoney" />
    <result column="invest_time" jdbcType="TIMESTAMP" property="investTime" />
    <result column="invest_status" jdbcType="INTEGER" property="investStatus" />
  </resultMap>
  <sql id="Base_Column_List">
    id, product_id, user_id, invest_money, invest_time, invest_status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from invest_info
    where id = #{id,jdbcType=INTEGER}
  </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from invest_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bjpowernode.model.InvestInfo">
    insert into invest_info (id, product_id, user_id, 
      invest_money, invest_time, invest_status
      )
    values (#{id,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{investMoney,jdbcType=DECIMAL}, #{investTime,jdbcType=TIMESTAMP}, #{investStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bjpowernode.model.InvestInfo">
    insert into invest_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="investMoney != null">
        invest_money,
      </if>
      <if test="investTime != null">
        invest_time,
      </if>
      <if test="investStatus != null">
        invest_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="investMoney != null">
        #{investMoney,jdbcType=DECIMAL},
      </if>
      <if test="investTime != null">
        #{investTime,jdbcType=TIMESTAMP},
      </if>
      <if test="investStatus != null">
        #{investStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bjpowernode.model.InvestInfo">
    update invest_info
    <set>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="investMoney != null">
        invest_money = #{investMoney,jdbcType=DECIMAL},
      </if>
      <if test="investTime != null">
        invest_time = #{investTime,jdbcType=TIMESTAMP},
      </if>
      <if test="investStatus != null">
        invest_status = #{investStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bjpowernode.model.InvestInfo">
    update invest_info
    set product_id = #{productId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      invest_money = #{investMoney,jdbcType=DECIMAL},
      invest_time = #{investTime,jdbcType=TIMESTAMP},
      invest_status = #{investStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--</editor-fold>-->

  <!--<editor-fold desc="自定义sql">-->
  <select id="querySumInvestMoney" resultType="java.math.BigDecimal">
    SELECT
	  round( sum( invest_money ), 0 )
    FROM
	  invest_info
  </select>
    <select id="queryInvestRecordByProductId" resultMap="BaseResultMap">
      select <include refid="Base_Column_List"/>
      from invest_info
      where product_id = #{id}
      and invest_status = 1
    </select>
    <!--</editor-fold>-->

</mapper>